// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class fundsDonated extends ethereum.Event {
  get params(): fundsDonated__Params {
    return new fundsDonated__Params(this);
  }
}

export class fundsDonated__Params {
  _event: fundsDonated;

  constructor(event: fundsDonated) {
    this._event = event;
  }

  get donor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get date(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class fundsWithdrawn extends ethereum.Event {
  get params(): fundsWithdrawn__Params {
    return new fundsWithdrawn__Params(this);
  }
}

export class fundsWithdrawn__Params {
  _event: fundsWithdrawn;

  constructor(event: fundsWithdrawn) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get date(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class milestoneCreated extends ethereum.Event {
  get params(): milestoneCreated__Params {
    return new milestoneCreated__Params(this);
  }
}

export class milestoneCreated__Params {
  _event: milestoneCreated;

  constructor(event: milestoneCreated) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get datecreated(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get period(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get milestoneCID(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class milestoneRejected extends ethereum.Event {
  get params(): milestoneRejected__Params {
    return new milestoneRejected__Params(this);
  }
}

export class milestoneRejected__Params {
  _event: milestoneRejected;

  constructor(event: milestoneRejected) {
    this._event = event;
  }

  get yesvote(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get novote(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CrowdFundingContract__milestonesResult {
  value0: string;
  value1: boolean;
  value2: BigInt;
  value3: i32;

  constructor(value0: string, value1: boolean, value2: BigInt, value3: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    return map;
  }

  getMilestoneCID(): string {
    return this.value0;
  }

  getApproved(): boolean {
    return this.value1;
  }

  getVotingPeriod(): BigInt {
    return this.value2;
  }

  getStatus(): i32 {
    return this.value3;
  }
}

export class CrowdFundingContract__showCurrentMillestoneResultValue0Struct extends ethereum.Tuple {
  get milestoneCID(): string {
    return this[0].toString();
  }

  get approved(): boolean {
    return this[1].toBoolean();
  }

  get votingPeriod(): BigInt {
    return this[2].toBigInt();
  }

  get status(): i32 {
    return this[3].toI32();
  }

  get votes(): Array<
    CrowdFundingContract__showCurrentMillestoneResultValue0VotesStruct
  > {
    return this[4].toTupleArray<
      CrowdFundingContract__showCurrentMillestoneResultValue0VotesStruct
    >();
  }
}

export class CrowdFundingContract__showCurrentMillestoneResultValue0VotesStruct extends ethereum.Tuple {
  get donorAddress(): Address {
    return this[0].toAddress();
  }

  get vote(): boolean {
    return this[1].toBoolean();
  }
}

export class CrowdFundingContract extends ethereum.SmartContract {
  static bind(address: Address): CrowdFundingContract {
    return new CrowdFundingContract("CrowdFundingContract", address);
  }

  campaignDuration(): BigInt {
    let result = super.call(
      "campaignDuration",
      "campaignDuration():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_campaignDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "campaignDuration",
      "campaignDuration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  campaignEnded(): boolean {
    let result = super.call("campaignEnded", "campaignEnded():(bool)", []);

    return result[0].toBoolean();
  }

  try_campaignEnded(): ethereum.CallResult<boolean> {
    let result = super.tryCall("campaignEnded", "campaignEnded():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  campaignOwner(): Address {
    let result = super.call("campaignOwner", "campaignOwner():(address)", []);

    return result[0].toAddress();
  }

  try_campaignOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "campaignOwner",
      "campaignOwner():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  donors(param0: Address): BigInt {
    let result = super.call("donors", "donors(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_donors(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("donors", "donors(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  etherBalance(): BigInt {
    let result = super.call("etherBalance", "etherBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_etherBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("etherBalance", "etherBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fundingCId(): string {
    let result = super.call("fundingCId", "fundingCId():(string)", []);

    return result[0].toString();
  }

  try_fundingCId(): ethereum.CallResult<string> {
    let result = super.tryCall("fundingCId", "fundingCId():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getDonation(): BigInt {
    let result = super.call("getDonation", "getDonation():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getDonation(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getDonation", "getDonation():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  milestones(param0: BigInt): CrowdFundingContract__milestonesResult {
    let result = super.call(
      "milestones",
      "milestones(uint256):(string,bool,uint256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new CrowdFundingContract__milestonesResult(
      result[0].toString(),
      result[1].toBoolean(),
      result[2].toBigInt(),
      result[3].toI32()
    );
  }

  try_milestones(
    param0: BigInt
  ): ethereum.CallResult<CrowdFundingContract__milestonesResult> {
    let result = super.tryCall(
      "milestones",
      "milestones(uint256):(string,bool,uint256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CrowdFundingContract__milestonesResult(
        value[0].toString(),
        value[1].toBoolean(),
        value[2].toBigInt(),
        value[3].toI32()
      )
    );
  }

  numberOfDonors(): BigInt {
    let result = super.call("numberOfDonors", "numberOfDonors():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numberOfDonors(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberOfDonors",
      "numberOfDonors():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  showCurrentMillestone(): CrowdFundingContract__showCurrentMillestoneResultValue0Struct {
    let result = super.call(
      "showCurrentMillestone",
      "showCurrentMillestone():((string,bool,uint256,uint8,(address,bool)[]))",
      []
    );

    return changetype<
      CrowdFundingContract__showCurrentMillestoneResultValue0Struct
    >(result[0].toTuple());
  }

  try_showCurrentMillestone(): ethereum.CallResult<
    CrowdFundingContract__showCurrentMillestoneResultValue0Struct
  > {
    let result = super.tryCall(
      "showCurrentMillestone",
      "showCurrentMillestone():((string,bool,uint256,uint8,(address,bool)[]))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<CrowdFundingContract__showCurrentMillestoneResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  targetAmount(): BigInt {
    let result = super.call("targetAmount", "targetAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_targetAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("targetAmount", "targetAmount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class CreatNewMilestoneCall extends ethereum.Call {
  get inputs(): CreatNewMilestoneCall__Inputs {
    return new CreatNewMilestoneCall__Inputs(this);
  }

  get outputs(): CreatNewMilestoneCall__Outputs {
    return new CreatNewMilestoneCall__Outputs(this);
  }
}

export class CreatNewMilestoneCall__Inputs {
  _call: CreatNewMilestoneCall;

  constructor(call: CreatNewMilestoneCall) {
    this._call = call;
  }

  get milestoneCID(): string {
    return this._call.inputValues[0].value.toString();
  }

  get votingPeriod(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreatNewMilestoneCall__Outputs {
  _call: CreatNewMilestoneCall;

  constructor(call: CreatNewMilestoneCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _fundingCId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _duration(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MakeDonationCall extends ethereum.Call {
  get inputs(): MakeDonationCall__Inputs {
    return new MakeDonationCall__Inputs(this);
  }

  get outputs(): MakeDonationCall__Outputs {
    return new MakeDonationCall__Outputs(this);
  }
}

export class MakeDonationCall__Inputs {
  _call: MakeDonationCall;

  constructor(call: MakeDonationCall) {
    this._call = call;
  }
}

export class MakeDonationCall__Outputs {
  _call: MakeDonationCall;

  constructor(call: MakeDonationCall) {
    this._call = call;
  }
}

export class VoteOnMilestoneCall extends ethereum.Call {
  get inputs(): VoteOnMilestoneCall__Inputs {
    return new VoteOnMilestoneCall__Inputs(this);
  }

  get outputs(): VoteOnMilestoneCall__Outputs {
    return new VoteOnMilestoneCall__Outputs(this);
  }
}

export class VoteOnMilestoneCall__Inputs {
  _call: VoteOnMilestoneCall;

  constructor(call: VoteOnMilestoneCall) {
    this._call = call;
  }

  get vote(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class VoteOnMilestoneCall__Outputs {
  _call: VoteOnMilestoneCall;

  constructor(call: VoteOnMilestoneCall) {
    this._call = call;
  }
}

export class WithdrawMilestoneCall extends ethereum.Call {
  get inputs(): WithdrawMilestoneCall__Inputs {
    return new WithdrawMilestoneCall__Inputs(this);
  }

  get outputs(): WithdrawMilestoneCall__Outputs {
    return new WithdrawMilestoneCall__Outputs(this);
  }
}

export class WithdrawMilestoneCall__Inputs {
  _call: WithdrawMilestoneCall;

  constructor(call: WithdrawMilestoneCall) {
    this._call = call;
  }
}

export class WithdrawMilestoneCall__Outputs {
  _call: WithdrawMilestoneCall;

  constructor(call: WithdrawMilestoneCall) {
    this._call = call;
  }
}
